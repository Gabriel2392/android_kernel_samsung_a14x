/*
 * Samsung EXYNOS CAMERA PostProcessing VRA driver
 *
 * Copyright (C) 2022 Samsung Electronics Co., Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef CAMERAPP_SFR_VRA_V6_0_0_H
#define CAMERAPP_SFR_VRA_V6_0_0_H

#define INT_PULSE		(0)
#define INT_LEVEL		(1)

#define VRA_SW_RESET_COUNT	10000
#define VRA_FW_BUSY		1
#define PREFETCH_CFG		0x3f4
#define VRA_TZINFO		0xFFFFFFFF

#define INTERRUPT_TYPE		INT_LEVEL

/* VRA 6.0 */
#define IP_VERSION		60

enum vra_img_format {
	VRA_RGB888_1P = 0,
	VRA_RGB888_3P = 1,
};

enum vra_interrupt_map {
	VRA_CNN_END_INT = 0,
	VRA_CNN_AXI_ERR_INT = 1,
	VRA_CNN_END_OF_LAYER_INT = 2,
	VRA_INTR_MAX,
};

#define VRA_INT_EN	((0)\
			|(1 << VRA_CNN_END_INT)\
			|(1 << VRA_CNN_AXI_ERR_INT)\
			)

/* Interrupt check */
#define VRA_INT_FRAME_END		(1 << VRA_CNN_END_INT)
#define VRA_INT_ERR			(1 << VRA_CNN_AXI_ERR_INT)
#define VRA_INT_LAYER_END		(1 << VRA_CNN_END_OF_LAYER_INT)

enum is_vra_reg_name {
	VRA_R_IP_CFG,
	VRA_R_GO,
	VRA_R_PREFETCH_OFFSET,
	VRA_R_PREFETCH_CFG,
	VRA_R_AXIM_STATUS,
	VRA_R_AXIM_OUTSTANDING_STATUS,
	VRA_R_AXIM_SWAP_CFG,
	VRA_R_AXIM_OUTSTANDING_CFG,
	VRA_R_SW_RESET_BIT,
	VRA_R_QCHANNEL_ENABLE_N,
	VRA_R_IRQ,
	VRA_R_IRQ_MASKED,
	VRA_R_IRQ_CFG,
	VRA_R_INPUT_BASE_ADDR,
	VRA_R_OUTPUT_BASE_ADDR,
	VRA_R_TEMPORARY_BASE_ADDR,
	VRA_R_CONSTANT_BASE_ADDR,
	VRA_R_INSTRUCTION_BASE_ADDR,
	VRA_R_SECURITY_INPUT_PATH,
	VRA_R_SEQID,
	VRA_R_TZINFO_SQID0,
	VRA_R_TZINFO_SQID1,
	VRA_R_TZINFO_SQID2,
	VRA_R_TZINFO_SQID3,
	VRA_R_TZINFO_SQID4,
	VRA_R_TZINFO_SQID5,
	VRA_R_TZINFO_SQID6,
	VRA_R_TZINFO_SQID7,
	VRA_REG_CNT,
};

enum is_vra_field_name {
	VRA_F_IP_ENABLE,
	VRA_F_FW_BUSY,
	VRA_F_GO,
	VRA_F_PREFETCH_OFFSET,
	VRA_F_PREFETCH_BUFFER,
	VRA_F_PREFETCH_SIZE,
	VRA_F_CURRENT_LAYER,
	VRA_F_IP_BUSY,
	VRA_F_WR_OUTSTANDING,
	VRA_F_RD_OUTSTANDING,
	VRA_F_WR_DATA_SWAP,
	VRA_F_RD_DATA_SWAP,
	VRA_F_MAX_WR_OUTSTANDING,
	VRA_F_MAX_RD_OUTSTANDING,
	VRA_F_SW_RESET_BIT,
	VRA_F_QCHANNEL_ENABLE_N,
	VRA_F_IRQ,
	VRA_F_IRQ_MASKED,
	VRA_F_IRQ_EN,
	VRA_F_LEVEL_PULSE_N_SEL,
	VRA_F_INPUT_BASE_ADDR,
	VRA_F_OUTPUT_BASE_ADDR,
	VRA_F_TEMPORARY_BASE_ADDR,
	VRA_F_CONSTANT_BASE_ADDR,
	VRA_F_INSTRUCTION_BASE_ADDR,
	VRA_F_SECURITY_INPUT_PATH,
	VRA_F_SEQID,
	VRA_F_TZINFO_SQID0,
	VRA_F_TZINFO_SQID1,
	VRA_F_TZINFO_SQID2,
	VRA_F_TZINFO_SQID3,
	VRA_F_TZINFO_SQID4,
	VRA_F_TZINFO_SQID5,
	VRA_F_TZINFO_SQID6,
	VRA_F_TZINFO_SQID7,
	VRA_REG_FIELD_CNT,
};

static const struct is_reg vra_regs[VRA_REG_CNT] = {
	{0x00000, "IP_CFG"},
	{0x00004, "GO"},
	{0x00008, "PREFETCH_OFFSET"},
	{0x0000C, "PREFETCH_CFG"},
	{0x00010, "AXIM_STATUS"},
	{0x00014, "AXIM_OUTSTANDING_STATUS"},
	{0x00018, "AXIM_SWAP_CFG"},
	{0x0001C, "AXIM_OUTSTANDING_CFG"},
	{0x00020, "SW_RESET_BIT"},
	{0x00024, "QCHANNEL_ENABLE_N"},
	{0x00028, "IRQ"},
	{0x0002C, "IRQ_MASKED"},
	{0x00030, "IRQ_CFG"},
	{0x00034, "INPUT_BASE_ADDR"},
	{0x00038, "OUTPUT_BASE_ADDR"},
	{0x0003C, "TEMPORARY_BASE_ADDR"},
	{0x00040, "CONSTANT_BASE_ADDR"},
	{0x00044, "INSTRUCTION_BASE_ADDR"},
	{0x00048, "SECURITY_INPUT_PATH"},
	{0x00100, "SEQID"},
	{0x00110, "TZINFO_SQID0"},
	{0x00114, "TZINFO_SQID1"},
	{0x00118, "TZINFO_SQID2"},
	{0x0011C, "TZINFO_SQID3"},
	{0x00120, "TZINFO_SQID4"},
	{0x00124, "TZINFO_SQID5"},
	{0x00128, "TZINFO_SQID6"},
	{0x0012C, "TZINFO_SQID7"},
};

static const struct is_field vra_fields[VRA_REG_FIELD_CNT] = {
	/* 1. register name 2. bit start 3. bit width 4. access type 5. reset */
	{"IP_ENABLE", 0, 1, RW, 0x0},
	{"FW_BUSY", 1, 1, RW, 0x0},
	{"GO", 0, 1, WTC, 0x0},
	{"PREFETCH_OFFSET", 0, 32, RW, 0x0},
	{"PREFETCH_BUFFER", 0, 3, RW, 0x0},
	{"PREFETCH_SIZE", 3, 8, RW, 0x10},
	{"CURRENT_LAYER", 0, 16, RO, 0x0},
	{"IP_BUSY", 16, 1, RO, 0x0},
	{"WR_OUTSTANDING", 0, 6, RO, 0x0},
	{"RD_OUTSTANDING", 6, 6, RO, 0x0},
	{"WR_DATA_SWAP", 0, 4, RW, 0x0},
	{"RD_DATA_SWAP", 4, 4, RW, 0x0},
	{"MAX_WR_OUTSTANDING", 0, 6, RW, 0x0},
	{"MAX_RD_OUTSTANDING", 6, 6, RW, 0x0},
	{"SW_RESET_BIT", 0, 1, WTC, 0x0},
	{"QCHANNEL_ENABLE_N", 0, 1, RW, 0x0},
	{"IRQ", 0, 3, XWTC, 0x0},
	{"IRQ_MASKED", 0, 3, RO, 0x0},
	{"IRQ_EN", 0, 3, RW, 0x0},
	{"LEVEL_PULSE_N_SEL", 3, 1, RW, 0x0},
	{"INPUT_BASE_ADDR", 0, 32, RW, 0x0},
	{"OUTPUT_BASE_ADDR", 0, 32, RW, 0x0},
	{"TEMPORARY_BASE_ADDR", 0, 32, RW, 0x0},
	{"CONSTANT_BASE_ADDR", 0, 32, RW, 0x0},
	{"INSTRUCTION_BASE_ADDR", 0, 32, RW, 0x0},
	{"SECURITY_INPUT_PATH", 0, 1, RW, 0x0},
	{"SEQID", 0, 3, RW, 0x0},
	{"TZINFO_SQID0", 0, 32, RW, 0x0},
	{"TZINFO_SQID1", 0, 32, RW, 0x0},
	{"TZINFO_SQID2", 0, 32, RW, 0x0},
	{"TZINFO_SQID3", 0, 32, RW, 0x0},
	{"TZINFO_SQID4", 0, 32, RW, 0x0},
	{"TZINFO_SQID5", 0, 32, RW, 0x0},
	{"TZINFO_SQID6", 0, 32, RW, 0x0},
	{"TZINFO_SQID7", 0, 32, RW, 0x0},
};
#endif
