/*
 * s2mpu16-regulator.h - Voltage regulator driver for the s2mpu16
 *
 *  Copyright (C) 2022 Samsung Electrnoics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef __LINUX_MFD_S2MPU16_REGULATOR_H
#define __LINUX_MFD_S2MPU16_REGULATOR_H
#include <linux/i2c.h>

#define MASK(width, shift)		(((0x1 << (width)) - 1) << shift)
#define SetBit(no)			(0x1 << (no))

/* sid */
#define SUB_CHANNEL	1 // TODO: check channel

/* PMIC base addr */
#define VGPIO_ADDR	0x00
#define COMMON_ADDR	0x03
#define PMIC1_ADDR	0x05
#define PMIC2_ADDR	0x06
#define CLOSE1_ADDR	0x0E
#define CLOSE2_ADDR	0x0F
#define GPIO_ADDR	0x0B
#define TEMP_ADDR	0x0C

#define S2MPU16_REG_INVALID		(0xFF)

/* PMIC ADDRESS: VGPIO_bitmap */
#define S2MPU16_VGPIO_REG0			0x00
#define S2MPU16_VGPIO_PSI			0x01
#define S2MPU16_VGPIO_VGI0			0x02
#define S2MPU16_VGPIO_VGI1			0x03
#define S2MPU16_VGPIO_VGI2			0x04
#define S2MPU16_VGPIO_VGI3			0x05
#define S2MPU16_VGPIO_VGI4			0x06
#define S2MPU16_VGPIO_VGI5			0x07
#define S2MPU16_VGPIO_VGI6			0x08
#define S2MPU16_VGPIO_VGI7			0x09
#define S2MPU16_VGPIO_VGI8			0x0A
#define S2MPU16_VGPIO_VGI9			0x0B
#define S2MPU16_VGPIO_VGI10			0x0C
#define S2MPU16_VGPIO_VGI11			0x0D
#define S2MPU16_VGPIO_VGI12			0x0E
#define S2MPU16_VGPIO_VGI13			0x0F
#define S2MPU16_VGPIO_VGI14			0x10
#define S2MPU16_VGPIO_VGI15			0x11
#define S2MPU16_VGPIO_VGI16			0x12
#define S2MPU16_VGPIO_VGI17			0x13
#define S2MPU16_VGPIO_VGI18			0x14

/* VGPIO TX (PMIC -> AP) table check*/
#define S2MPU16_VGI0_IRQ_S			(1 << 3)

/* PMIC ADDRESS: COMMON_bitmap */
#define S2MPU16_COMMON_REG0_VGPIO0			0x00
#define S2MPU16_COMMON_REG0_VGPIO1			0x01
#define S2MPU16_COMMON_CHIP_ID				0x0E
#define S2MPU16_COMMON_SPMI_CFG1			0x0F
#define S2MPU16_COMMON_SPMI_CFG2			0x10
#define S2MPU16_COMMON_SPMI_CFG3			0x11
#define S2MPU16_COMMON_COM_CTRL1			0x12
#define S2MPU16_COMMON_COM_CTRL2			0x13
#define S2MPU16_COMMON_COM_CTRL3			0x14
#define S2MPU16_COMMON_COM_CTRL5			0x15
#define S2MPU16_COMMON_TX_MASK				0x16
#define S2MPU16_COMMON_IRQ				0x17
#define S2MPU16_COMMON_COM_CTRL4			0x18

/* CHIP ID MASK */
#define S2MPU16_CHIP_ID_MASK			(0xFF)
#define S2MPU16_CHIP_ID_HW_MASK			(0x0F)
#define S2MPU16_CHIP_ID_SW_MASK			(0xF0)

/* TX_MASK MASK */
#define S2MPU16_GPIO_IRQM_MASK			(1 << 2)
#define S2MPU16_ADC_IRQM_MASK			(1 << 1)
#define S2MPU16_PM_IRQM_MASK			(1 << 0)

/* PMIC ADDRESS: OOTP1_bitmap */
#define S2MPU16_PM1_INT1			0x00
#define S2MPU16_PM1_INT2			0x01
#define S2MPU16_PM1_INT3			0x02
#define S2MPU16_PM1_INT4			0x03
#define S2MPU16_PM1_INT5			0x04
#define S2MPU16_PM1_INT6			0x05
#define S2MPU16_PM1_INT7			0x06
#define S2MPU16_PM1_INT1M			0x07
#define S2MPU16_PM1_INT2M			0x08
#define S2MPU16_PM1_INT3M			0x09
#define S2MPU16_PM1_INT4M			0x0A
#define S2MPU16_PM1_INT5M			0x0B
#define S2MPU16_PM1_INT6M			0x0C
#define S2MPU16_PM1_INT7M			0x0D
#define S2MPU16_PM1_STATUS1			0x0E
#define S2MPU16_PM1_STATUS2			0x0F
#define S2MPU16_PM1_STATUS3			0x10
#define S2MPU16_PM1_OFFSRC1_CUR			0x11
#define S2MPU16_PM1_OFFSRC2_CUR			0x12
#define S2MPU16_PM1_OFFSRC1_OLD1		0x13
#define S2MPU16_PM1_OFFSRC2_OLD1		0x14
#define S2MPU16_PM1_OFFSRC1_OLD2		0x15
#define S2MPU16_PM1_OFFSRC2_OLD2		0x16
#define S2MPU16_PM1_CTRL1			0x17
#define S2MPU16_PM1_CTRL2			0x18
#define S2MPU16_PM1_CTRL3			0x19
#define S2MPU16_PM1_ETC_OTP1			0x1A
#define S2MPU16_PM1_ETC_OTP2			0x1B
#define S2MPU16_PM1_UVLO_OTP			0x1C
#define S2MPU16_PM1_CFG_PM			0x1D
#define S2MPU16_PM1_TIME_CTRL			0x1E
#define S2MPU16_PM1_BUCK1S_CTRL			0x1F
#define S2MPU16_PM1_BUCK1S_OUT1			0x20
#define S2MPU16_PM1_BUCK1S_OUT2			0x21
#define S2MPU16_PM1_BUCK1S_OUT3			0x22
#define S2MPU16_PM1_BUCK1S_OUT4			0x23
#define S2MPU16_PM1_BUCK1S_DVS			0x24
#define S2MPU16_PM1_BUCK1S_AFM			0x25
#define S2MPU16_PM1_BUCK1S_AFMX			0x26
#define S2MPU16_PM1_BUCK1S_AFMY			0x27
#define S2MPU16_PM1_BUCK1S_AFMZ			0x28
#define S2MPU16_PM1_BUCK1S_OCP			0x29
#define S2MPU16_PM1_BUCK1S_AVP			0x2A
#define S2MPU16_PM1_BUCK2S_CTRL			0x2B
#define S2MPU16_PM1_BUCK2S_OUT1			0x2C
#define S2MPU16_PM1_BUCK2S_OUT2			0x2D
#define S2MPU16_PM1_BUCK2S_OUT3			0x2E
#define S2MPU16_PM1_BUCK2S_OUT4			0x2F
#define S2MPU16_PM1_BUCK2S_DVS			0x30
#define S2MPU16_PM1_BUCK2S_AFM			0x31
#define S2MPU16_PM1_BUCK2S_AFMX			0x32
#define S2MPU16_PM1_BUCK2S_AFMY			0x33
#define S2MPU16_PM1_BUCK2S_AFMZ			0x34
#define S2MPU16_PM1_BUCK2S_OCP			0x35
#define S2MPU16_PM1_BUCK2S_AVP			0x36
#define S2MPU16_PM1_BUCK3S_CTRL			0x37
#define S2MPU16_PM1_BUCK3S_OUT1			0x38
#define S2MPU16_PM1_BUCK3S_OUT2			0x39
#define S2MPU16_PM1_BUCK3S_OUT3			0x3A
#define S2MPU16_PM1_BUCK3S_OUT4			0x3B
#define S2MPU16_PM1_BUCK3S_DVS			0x3C
#define S2MPU16_PM1_BUCK3S_AFM			0x3D
#define S2MPU16_PM1_BUCK3S_AFMX			0x3E
#define S2MPU16_PM1_BUCK3S_AFMY			0x3F
#define S2MPU16_PM1_BUCK3S_AFMZ			0x40
#define S2MPU16_PM1_BUCK3S_OCP			0x41
#define S2MPU16_PM1_BUCK3S_AVP			0x42
#define S2MPU16_PM1_BUCK4S_CTRL			0x43
#define S2MPU16_PM1_BUCK4S_OUT1			0x44
#define S2MPU16_PM1_BUCK4S_OUT2			0x45
#define S2MPU16_PM1_BUCK4S_OUT3			0x46
#define S2MPU16_PM1_BUCK4S_OUT4			0x47
#define S2MPU16_PM1_BUCK4S_DVS			0x48
#define S2MPU16_PM1_BUCK4S_AFM			0x49
#define S2MPU16_PM1_BUCK4S_AFMX			0x4A
#define S2MPU16_PM1_BUCK4S_AFMY			0x4B
#define S2MPU16_PM1_BUCK4S_AFMZ			0x4C
#define S2MPU16_PM1_BUCK4S_OCP			0x4D
#define S2MPU16_PM1_BUCK4S_AVP			0x4E
#define S2MPU16_PM1_BUCK5S_CTRL			0x4F
#define S2MPU16_PM1_BUCK5S_OUT1			0x50
#define S2MPU16_PM1_BUCK5S_OUT2			0x51
#define S2MPU16_PM1_BUCK5S_OUT3			0x52
#define S2MPU16_PM1_BUCK5S_OUT4			0x53
#define S2MPU16_PM1_BUCK5S_DVS			0x54
#define S2MPU16_PM1_BUCK5S_AFM			0x55
#define S2MPU16_PM1_BUCK5S_AFMX			0x56
#define S2MPU16_PM1_BUCK5S_AFMY			0x57
#define S2MPU16_PM1_BUCK5S_AFMZ			0x58
#define S2MPU16_PM1_BUCK5S_OCP			0x59
#define S2MPU16_PM1_BUCK5S_AVP			0x5A
#define S2MPU16_PM1_BUCK6S_CTRL			0x5B
#define S2MPU16_PM1_BUCK6S_OUT1			0x5C
#define S2MPU16_PM1_BUCK6S_OUT2			0x5D
#define S2MPU16_PM1_BUCK6S_OUT3			0x5E
#define S2MPU16_PM1_BUCK6S_OUT4			0x5F
#define S2MPU16_PM1_BUCK6S_DVS			0x60
#define S2MPU16_PM1_BUCK6S_AFM			0x61
#define S2MPU16_PM1_BUCK6S_AFMX			0x62
#define S2MPU16_PM1_BUCK6S_AFMY			0x63
#define S2MPU16_PM1_BUCK6S_AFMZ			0x64
#define S2MPU16_PM1_BUCK6S_OCP			0x65
#define S2MPU16_PM1_BUCK6S_AVP			0x66
#define S2MPU16_PM1_BUCK7S_CTRL			0x67
#define S2MPU16_PM1_BUCK7S_OUT1			0x68
#define S2MPU16_PM1_BUCK7S_OUT2			0x69
#define S2MPU16_PM1_BUCK7S_OUT3			0x6A
#define S2MPU16_PM1_BUCK7S_OUT4			0x6B
#define S2MPU16_PM1_BUCK7S_DVS			0x6C
#define S2MPU16_PM1_BUCK7S_AFM			0x6D
#define S2MPU16_PM1_BUCK7S_AFMX			0x6E
#define S2MPU16_PM1_BUCK7S_AFMY			0x6F
#define S2MPU16_PM1_BUCK7S_AFMZ			0x70
#define S2MPU16_PM1_BUCK7S_OCP			0x71
#define S2MPU16_PM1_BUCK7S_AVP			0x72
#define S2MPU16_PM1_BUCK8S_CTRL			0x73
#define S2MPU16_PM1_BUCK8S_OUT1			0x74
#define S2MPU16_PM1_BUCK8S_OUT2			0x75
#define S2MPU16_PM1_BUCK8S_OUT3			0x76
#define S2MPU16_PM1_BUCK8S_OUT4			0x77
#define S2MPU16_PM1_BUCK8S_DVS			0x78
#define S2MPU16_PM1_BUCK8S_AFM			0x79
#define S2MPU16_PM1_BUCK8S_AFMX			0x7A
#define S2MPU16_PM1_BUCK8S_AFMY			0x7B
#define S2MPU16_PM1_BUCK8S_AFMZ			0x7C
#define S2MPU16_PM1_BUCK8S_OCP			0x7D
#define S2MPU16_PM1_BUCK8S_AVP			0x7E
#define S2MPU16_PM1_BUCK9S_CTRL			0x7F
#define S2MPU16_PM1_BUCK9S_OUT1			0x80
#define S2MPU16_PM1_BUCK9S_OUT2			0x81
#define S2MPU16_PM1_BUCK9S_OUT3			0x82
#define S2MPU16_PM1_BUCK9S_OUT4			0x83
#define S2MPU16_PM1_BUCK9S_DVS			0x84
#define S2MPU16_PM1_BUCK9S_AFM			0x85
#define S2MPU16_PM1_BUCK9S_AFMX			0x86
#define S2MPU16_PM1_BUCK9S_AFMY			0x87
#define S2MPU16_PM1_BUCK9S_AFMZ			0x88
#define S2MPU16_PM1_BUCK9S_OCP			0x89
#define S2MPU16_PM1_BUCK9S_AVP			0x8A
#define S2MPU16_PM1_BUCK10S_CTRL		0x8B
#define S2MPU16_PM1_BUCK10S_OUT1		0x8C
#define S2MPU16_PM1_BUCK10S_OUT2		0x8D
#define S2MPU16_PM1_BUCK10S_OUT3		0x8E
#define S2MPU16_PM1_BUCK10S_OUT4		0x8F
#define S2MPU16_PM1_BUCK10S_DVS			0x90
#define S2MPU16_PM1_BUCK10S_AFM			0x91
#define S2MPU16_PM1_BUCK10S_AFMX		0x92
#define S2MPU16_PM1_BUCK10S_AFMY		0x93
#define S2MPU16_PM1_BUCK10S_AFMZ		0x94
#define S2MPU16_PM1_BUCK10S_OCP			0x95
#define S2MPU16_PM1_BUCK10S_AVP			0x96
#define S2MPU16_PM1_SR1S_CTRL			0x97
#define S2MPU16_PM1_SR1S_OUT1			0x98
#define S2MPU16_PM1_SR1S_OUT2			0x99
#define S2MPU16_PM1_SR1S_DVS1			0x9A
#define S2MPU16_PM1_SR1S_DVS2			0x9B
#define S2MPU16_PM1_SR1S_OCP			0x9C
#define S2MPU16_PM1_SR2S_CTRL			0x9D
#define S2MPU16_PM1_SR2S_OUT1			0x9E
#define S2MPU16_PM1_SR2S_OUT2			0x9F
#define S2MPU16_PM1_SR2S_OCP			0xA0
#define S2MPU16_PM1_DVS_LDO_OFFSET1		0xA1
#define S2MPU16_PM1_DVS_LDO_OFFSET2		0xA2
#define S2MPU16_PM1_DVS_LDO_OFFSET3		0xA3
#define S2MPU16_PM1_DVS_LDO_RAMP1		0xA4
#define S2MPU16_PM1_DVS_LDO_RAMP2		0xA5
#define S2MPU16_PM1_DVS_LDO_RAMP3		0xA6
#define S2MPU16_PM1_LDO1S_CTRL			0xA7
#define S2MPU16_PM1_LDO1S_OUT1			0xA8
#define S2MPU16_PM1_LDO1S_OUT2			0xA9
#define S2MPU16_PM1_LDO1S_OUT3			0xAA
#define S2MPU16_PM1_LDO1S_OUT4			0xAB
#define S2MPU16_PM1_LDO2S_CTRL			0xAC
#define S2MPU16_PM1_LDO2S_OUT			0xAD
#define S2MPU16_PM1_LDO3S_CTRL			0xAE
#define S2MPU16_PM1_LDO4S_CTRL			0xAF
#define S2MPU16_PM1_LDO4S_OUT1			0xB0
#define S2MPU16_PM1_LDO4S_OUT2			0xB1
#define S2MPU16_PM1_LDO4S_OUT3			0xB2
#define S2MPU16_PM1_LDO4S_OUT4			0xB3
#define S2MPU16_PM1_LDO5S_CTRL			0xB4
#define S2MPU16_PM1_LDO5S_OUT1			0xB5
#define S2MPU16_PM1_LDO5S_OUT2			0xB6
#define S2MPU16_PM1_LDO5S_OUT3			0xB7
#define S2MPU16_PM1_LDO5S_OUT4			0xB8
#define S2MPU16_PM1_LDO6S_CTRL			0xB9
#define S2MPU16_PM1_LDO6S_OUT			0xBA
#define S2MPU16_PM1_LDO7S_CTRL			0xBB
#define S2MPU16_PM1_LDO7S_OUT			0xBC
#define S2MPU16_PM1_LDO8S_CTRL			0xBD
#define S2MPU16_PM1_LDO9S_CTRL			0xBE
#define S2MPU16_PM1_LDO10S_CTRL			0xBF
#define S2MPU16_PM1_LDO11S_CTRL			0xC0
#define S2MPU16_PM1_LDO12S_CTRL			0xC1
#define S2MPU16_PM1_LDO13S_CTRL			0xC2
#define S2MPU16_PM1_LDO14S_CTRL			0xC3
#define S2MPU16_PM1_LDO14S_OUT			0xC4
#define S2MPU16_PM1_LDO15S_CTRL			0xC5
#define S2MPU16_PM1_LDO15S_OUT1			0xC6
#define S2MPU16_PM1_LDO15S_OUT2			0xC7
#define S2MPU16_PM1_LDO15S_OUT3			0xC8
#define S2MPU16_PM1_LDO15S_OUT4			0xC9
#define S2MPU16_PM1_LDO_DSCH1			0xCA
#define S2MPU16_PM1_LDO_DSCH2			0xCB
#define S2MPU16_PM1_OOTP1_RSVD1			0xCC
#define S2MPU16_PM1_OOTP1_RSVD2			0xCD
#define S2MPU16_PM1_EXT_PWRHOLD			0xFB
#define S2MPU16_PM1_EXT_CTRL1			0xFF

/* PMIC ADDRESS: OOTP2_bitmap */
#define S2MPU16_PM2_ONSEQ_CTRL1			0x00
#define S2MPU16_PM2_ONSEQ_CTRL2			0x01
#define S2MPU16_PM2_ONSEQ_CTRL3			0x02
#define S2MPU16_PM2_ONSEQ_CTRL4			0x03
#define S2MPU16_PM2_ONSEQ_CTRL5			0x04
#define S2MPU16_PM2_ONSEQ_CTRL6			0x05
#define S2MPU16_PM2_ONSEQ_CTRL7			0x06
#define S2MPU16_PM2_ONSEQ_CTRL8			0x07
#define S2MPU16_PM2_ONSEQ_CTRL9			0x08
#define S2MPU16_PM2_ONSEQ_CTRL10		0x09
#define S2MPU16_PM2_ONSEQ_CTRL11		0x0A
#define S2MPU16_PM2_ONSEQ_CTRL12		0x0B
#define S2MPU16_PM2_ONSEQ_CTRL13		0x0C
#define S2MPU16_PM2_ONSEQ_CTRL14		0x0D
#define S2MPU16_PM2_ONSEQ_CTRL15		0x0E
#define S2MPU16_PM2_ONSEQ_CTRL16		0x0F
#define S2MPU16_PM2_ONSEQ_CTRL17		0x10
#define S2MPU16_PM2_ONSEQ_CTRL18		0x11
#define S2MPU16_PM2_ONSEQ_CTRL19		0x12
#define S2MPU16_PM2_ONSEQ_CTRL20		0x13
#define S2MPU16_PM2_ONSEQ_CTRL21		0x14
#define S2MPU16_PM2_ONSEQ_CTRL22		0x15
#define S2MPU16_PM2_ONSEQ_CTRL23		0x16
#define S2MPU16_PM2_ONSEQ_CTRL24		0x17
#define S2MPU16_PM2_ONSEQ_CTRL25		0x18
#define S2MPU16_PM2_ONSEQ_CTRL26		0x19
#define S2MPU16_PM2_ONSEQ_CTRL27		0x1A
#define S2MPU16_PM2_OFF_SEQ_CTRL1		0x1B
#define S2MPU16_PM2_OFF_SEQ_CTRL2		0x1C
#define S2MPU16_PM2_OFF_SEQ_CTRL3		0x1D
#define S2MPU16_PM2_OFF_SEQ_CTRL4		0x1E
#define S2MPU16_PM2_OFF_SEQ_CTRL5		0x1F
#define S2MPU16_PM2_OFF_SEQ_CTRL6		0x20
#define S2MPU16_PM2_OFF_SEQ_CTRL7		0x21
#define S2MPU16_PM2_OFF_SEQ_CTRL8		0x22
#define S2MPU16_PM2_OFF_SEQ_CTRL9		0x23
#define S2MPU16_PM2_OFF_SEQ_CTRL10		0x24
#define S2MPU16_PM2_OFF_SEQ_CTRL11		0x25
#define S2MPU16_PM2_OFF_SEQ_CTRL12		0x26
#define S2MPU16_PM2_OFF_SEQ_CTRL13		0x27
#define S2MPU16_PM2_OFF_SEQ_CTRL14		0x28
#define S2MPU16_PM2_S_SEL_VGPIO1		0x29
#define S2MPU16_PM2_S_SEL_VGPIO2		0x2A
#define S2MPU16_PM2_S_SEL_VGPIO3		0x2B
#define S2MPU16_PM2_S_SEL_VGPIO4		0x2C
#define S2MPU16_PM2_S_SEL_VGPIO5		0x2D
#define S2MPU16_PM2_S_SEL_VGPIO6		0x2E
#define S2MPU16_PM2_S_SEL_VGPIO7		0x2F
#define S2MPU16_PM2_S_SEL_VGPIO8		0x30
#define S2MPU16_PM2_S_SEL_VGPIO9		0x31
#define S2MPU16_PM2_S_SEL_VGPIO10		0x32
#define S2MPU16_PM2_S_SEL_VGPIO11		0x33
#define S2MPU16_PM2_S_SEL_VGPIO12		0x34
#define S2MPU16_PM2_S_SEL_VGPIO13		0x35
#define S2MPU16_PM2_S_SEL_VGPIO14		0x36
#define S2MPU16_PM2_S_SEL_VGPIO15		0x37
#define S2MPU16_PM2_S_SEL_VGPIO16		0x38
#define S2MPU16_PM2_S_SEL_VGPIO17		0x39
#define S2MPU16_PM2_S_SEL_VGPIO18		0x3A
#define S2MPU16_PM2_S_SEL_VGPIO19		0x3B
#define S2MPU16_PM2_S_SEL_VGPIO20		0x3C
#define S2MPU16_PM2_S_SEL_VGPIO21		0x3D
#define S2MPU16_PM2_S_SEL_VGPIO22		0x3E
#define S2MPU16_PM2_S_SEL_VGPIO23		0x3F
#define S2MPU16_PM2_S_SEL_VGPIO24		0x40
#define S2MPU16_PM2_S_SEL_VGPIO25		0x41
#define S2MPU16_PM2_S_SEL_VGPIO26		0x42
#define S2MPU16_PM2_S_SEL_VGPIO27		0x43
#define S2MPU16_PM2_OFF_CTRL6			0x44
#define S2MPU16_PM2_OFF_CTRL7			0x45
#define S2MPU16_PM2_DUMP_CTRL3			0x46
#define S2MPU16_PM2_DUMP_CTRL4			0x47
#define S2MPU16_PM2_DUMP_CTRL5			0x48
#define S2MPU16_PM2_OOTP2_RSVD1			0x49
#define S2MPU16_PM2_S_SEL_DVS_EN1		0x4A
#define S2MPU16_PM2_S_SEL_DVS_EN2		0x4B
#define S2MPU16_PM2_S_SEL_DVS_EN3		0x4C
#define S2MPU16_PM2_S_SEL_DVS_EN4		0x4D
#define S2MPU16_PM2_S_SEL_DVS_EN5		0x4E
#define S2MPU16_PM2_S_SEL_DVS_EN6		0x4F
#define S2MPU16_PM2_S_SEL_DVS_EN7		0x50
#define S2MPU16_PM2_SR_SEL_DVS_EN1		0x51
#define S2MPU16_PM2_OOTP2_RSVD2			0x52
#define S2MPU16_PM2_OFF_CTRL1			0x53
#define S2MPU16_PM2_OFF_CTRL2			0x54
#define S2MPU16_PM2_OFF_CTRL3			0x55
#define S2MPU16_PM2_OFF_CTRL4			0x56
#define S2MPU16_PM2_OFF_CTRL5			0x57
#define S2MPU16_PM2_SEQ_CTRL1			0x58
#define S2MPU16_PM2_SEQ_CTRL2			0x59
#define S2MPU16_PM2_CFG_PM2			0x5A
#define S2MPU16_PM2_CFG_PM3			0x5B
#define S2MPU16_PM2_SUB_CTRL			0x5C
#define S2MPU16_PM2_PSI_CTRL1			0x5D
#define S2MPU16_PM2_PSI_CTRL2			0x5E
#define S2MPU16_PM2_SEL_HW_GPIO			0x5F
#define S2MPU16_PM2_LDO_OI_CTRL1		0x60
#define S2MPU16_PM2_LDO_OI_CTRL2		0x61
#define S2MPU16_PM2_OI_OVP_CTRL			0x62
#define S2MPU16_PM2_OVP_CTRL2			0x63
#define S2MPU16_PM2_IPTAT			0x64
#define S2MPU16_PM2_AFM_CH_SEL1			0x65
#define S2MPU16_PM2_AFM_CH_SEL2			0x66
#define S2MPU16_PM2_EXT_EN			0x67
#define S2MPU16_PM2_DUMP_CTRL1			0x68
#define S2MPU16_PM2_DUMP_CTRL2			0x69
#define S2MPU16_PM2_PROT_CTRL			0x6A

/* PM mask */
#define BUCK_RAMP_MASK			(0x03)
#define BUCK_RAMP_UP_SHIFT		6

/* CFG_PM reg WTSR_EN Mask */
#define S2MPU16_WTSREN_MASK		MASK(1, 2)

/* s2mpu16 Regulator ids */
enum s2mpu16_regulators {
	S2MPU16_BUCK1,
	//S2MPU16_BUCK2,
	S2MPU16_BUCK3,
	S2MPU16_BUCK4,
	S2MPU16_BUCK5,
	//S2MPU16_BUCK6,
	//S2MPU16_BUCK7,
	//S2MPU16_BUCK8,
	S2MPU16_BUCK9,
	S2MPU16_BUCK10,
	S2MPU16_BUCK_SR1,
	S2MPU16_BUCK_SR2,
	//S2MPU16_LDO1,
	//S2MPU16_LDO2,
	//S2MPU16_LDO3,
	//S2MPU16_LDO4,
	//S2MPU16_LDO5,
	//S2MPU16_LDO6,
	//S2MPU16_LDO7,
	//S2MPU16_LDO8,
	//S2MPU16_LDO9,
	//S2MPU16_LDO10,
	//S2MPU16_LDO11,
	//S2MPU16_LDO12,
	S2MPU16_LDO13,
	//S2MPU16_LDO14,
	S2MPU16_LDO15,
	S2MPU16_REG_MAX,
};

/* BUCKs 1S to 10S */
#define S2MPU16_BUCK_MIN1		300000
#define S2MPU16_BUCK_STEP1		6250
/* BUCK SR1 (BB) */
#define S2MPU16_BUCK_MIN2		2600000
#define S2MPU16_BUCK_STEP2		12500
/* BUCK SR2S */
#define S2MPU16_BUCK_MIN3		600000
#define S2MPU16_BUCK_STEP3		12500
/* LDOs LV 1S/2S/4S~7S/14S/15S  */
#define S2MPU16_LDO_MIN1		300000
#define S2MPU16_LDO_STEP1		6250
/* LDO IV 3S/8S~10S */
#define S2MPU16_LDO_MIN2		1500000
#define S2MPU16_LDO_STEP2		12500
/* LDO MV 11S~13S */
#define S2MPU16_LDO_MIN3		1800000
#define S2MPU16_LDO_STEP3		25000

/* LDO/BUCK output voltage control */
#define S2MPU16_LDO_VSEL_MASK1		0xFF	/* LDO_OUT */
#define S2MPU16_LDO_VSEL_MASK2		0x3F	/* LDO_CTRL */
#define S2MPU16_BUCK_VSEL_MASK		0xFF
#define S2MPU16_BUCK_N_VOLTAGES 	(S2MPU16_BUCK_VSEL_MASK + 1)

/* BUCK/LDO Enable control[7:6] */
#define S2MPU16_ENABLE_SHIFT		0x06
#define S2MPU16_ENABLE_MASK		(0x03 << S2MPU16_ENABLE_SHIFT)
#define S2MPU16_SEL_VGPIO_ON		(0x01 << S2MPU16_ENABLE_SHIFT)

#define S2MPU16_REGULATOR_MAX		(S2MPU16_REG_MAX)

/* Set LDO/BUCK soft time */
#define S2MPU16_ENABLE_TIME_LDO		135
#define S2MPU16_ENABLE_TIME_BUCK	130

/* OI mask */
#define S2MPU16_PMIC_IRQ_OI_B1_MASK	(1 << 0)
#define S2MPU16_PMIC_IRQ_OI_B2_MASK	(1 << 1)
#define S2MPU16_PMIC_IRQ_OI_B3_MASK	(1 << 2)
#define S2MPU16_PMIC_IRQ_OI_B4_MASK	(1 << 3)
#define S2MPU16_PMIC_IRQ_OI_B5_MASK	(1 << 4)
#define S2MPU16_PMIC_IRQ_OI_B6_MASK	(1 << 5)
#define S2MPU16_PMIC_IRQ_OI_B7_MASK	(1 << 6)
#define S2MPU16_PMIC_IRQ_OI_B8_MASK	(1 << 7)
#define S2MPU16_PMIC_IRQ_OI_B9_MASK	(1 << 0)
#define S2MPU16_PMIC_IRQ_OI_B10_MASK	(1 << 1)
#define S2MPU16_PMIC_IRQ_OI_SR1S_MASK	(1 << 4)
#define S2MPU16_PMIC_IRQ_OI_SR2S_MASK	(1 << 5)
/* OCP mask */
#define S2MPU16_PMIC_IRQ_OCP_B1_MASK	(1 << 0)
#define S2MPU16_PMIC_IRQ_OCP_B2_MASK	(1 << 1)
#define S2MPU16_PMIC_IRQ_OCP_B3_MASK	(1 << 2)
#define S2MPU16_PMIC_IRQ_OCP_B4_MASK	(1 << 3)
#define S2MPU16_PMIC_IRQ_OCP_B5_MASK	(1 << 4)
#define S2MPU16_PMIC_IRQ_OCP_B6_MASK	(1 << 5)
#define S2MPU16_PMIC_IRQ_OCP_B7_MASK	(1 << 6)
#define S2MPU16_PMIC_IRQ_OCP_B8_MASK	(1 << 7)
#define S2MPU16_PMIC_IRQ_OCP_B9_MASK	(1 << 0)
#define S2MPU16_PMIC_IRQ_OCP_B10_MASK	(1 << 1)
#define S2MPU16_PMIC_IRQ_OCP_SR1S_MASK	(1 << 4)
#define S2MPU16_PMIC_IRQ_OCP_SR2S_MASK	(1 << 5)
/* Temp mask */
#define S2MPU16_IRQ_INT120C_MASK	(1 << 2)
#define S2MPU16_IRQ_INT140C_MASK	(1 << 3)

/*
 * sec_opmode_data - regulator operation mode data
 * @id: regulator id
 * @mode: regulator operation mode
 */

enum s2mpu16_temperature_source {
	S2MPU16_TEMP_120 = 0,	/* 120 degree */
	S2MPU16_TEMP_140,	/* 140 degree */

	S2MPU16_TEMP_NR,
};

enum s2mpu16_irq_source {
	S2MPU16_PMIC_INT1 = 0,
	S2MPU16_PMIC_INT2,
	S2MPU16_PMIC_INT3,
	S2MPU16_PMIC_INT4,
	S2MPU16_PMIC_INT5,
	S2MPU16_PMIC_INT6,
	S2MPU16_PMIC_INT7,
	S2MPU16_IRQ_GROUP_NR,
};

#define S2MPU16_NUM_IRQ_PMIC_REGS	7 /* INT1 to INT7 */
#define S2MPU16_BUCK_MAX		12
#define S2MPU16_TEMP_MAX		2

enum s2mpu16_irq {
	/* PMIC */
	S2MPU16_PMIC_IRQ_PWRONF_INT1,
	S2MPU16_PMIC_IRQ_PWRONR_INT1,
	S2MPU16_PMIC_IRQ_INT120C_INT1,
	S2MPU16_PMIC_IRQ_INT140C_INT1,
	S2MPU16_PMIC_IRQ_TSD_INT1,
	S2MPU16_PMIC_IRQ_WTSR_INT1,
	S2MPU16_PMIC_IRQ_WRSTB_INT1,
	S2MPU16_PMIC_IRQ_TX_TRAN_FAIL_INT1,

	S2MPU16_PMIC_IRQ_OCP_B1S_INT2,
	S2MPU16_PMIC_IRQ_OCP_B2S_INT2,
	S2MPU16_PMIC_IRQ_OCP_B3S_INT2,
	S2MPU16_PMIC_IRQ_OCP_B4S_INT2,
	S2MPU16_PMIC_IRQ_OCP_B5S_INT2,
	S2MPU16_PMIC_IRQ_OCP_B6S_INT2,
	S2MPU16_PMIC_IRQ_OCP_B7S_INT2,
	S2MPU16_PMIC_IRQ_OCP_B8S_INT2,

	S2MPU16_PMIC_IRQ_OCP_B9S_INT2,
	S2MPU16_PMIC_IRQ_OCP_B10S_INT2,
	S2MPU16_PMIC_IRQ_OCP_SR1S_INT2,
	S2MPU16_PMIC_IRQ_OCP_SR2S_INT3,

	S2MPU16_PMIC_IRQ_OI_B1S_INT4,
	S2MPU16_PMIC_IRQ_OI_B2S_INT4,
	S2MPU16_PMIC_IRQ_OI_B3S_INT4,
	S2MPU16_PMIC_IRQ_OI_B4S_INT4,
	S2MPU16_PMIC_IRQ_OI_B5S_INT4,
	S2MPU16_PMIC_IRQ_OI_B6S_INT4,
	S2MPU16_PMIC_IRQ_OI_B7S_INT4,
	S2MPU16_PMIC_IRQ_OI_B8S_INT4,

	S2MPU16_PMIC_IRQ_OI_B9S_INT5,
	S2MPU16_PMIC_IRQ_OI_B10S_INT5,
	S2MPU16_PMIC_IRQ_OI_SR1S_INT5,
	S2MPU16_PMIC_IRQ_OI_SR2S_INT5,
	S2MPU16_PMIC_IRQ_OVP_INT5,
	S2MPU16_PMIC_IRQ_AUTO_EXIT_INT5,

	S2MPU16_PMIC_IRQ_LDO13_SCP_INT6,
	S2MPU16_PMIC_IRQ_CHECKSUM_INT6,
	S2MPU16_PMIC_IRQ_PARITY_ERR_DATA_INT6,
	S2MPU16_PMIC_IRQ_PARITY_ERR_ADDR_L_INT6,
	S2MPU16_PMIC_IRQ_PARITY_ERR_ADDR_R_INT6,
	S2MPU16_PMIC_IRQ_PARITY_ERR_CMD_INT6,

	S2MPU16_PMIC_IRQ_SPMI_LDO_OK_F_INT7,

	S2MPU16_IRQ_NR,
};

enum s2mpu16_irq_type {
	/* OI */
	S2MPU16_IRQ_OI_B1S,
	S2MPU16_IRQ_OI_B2S,
	S2MPU16_IRQ_OI_B3S,
	S2MPU16_IRQ_OI_B4S,
	S2MPU16_IRQ_OI_B5S,
	S2MPU16_IRQ_OI_B6S,
	S2MPU16_IRQ_OI_B7S,
	S2MPU16_IRQ_OI_B8S,
	S2MPU16_IRQ_OI_B9S,
	S2MPU16_IRQ_OI_B10S,
	S2MPU16_IRQ_OI_SR1S,
	S2MPU16_IRQ_OI_SR2S,
	/* OCP */
	S2MPU16_IRQ_OCP_B1S,
	S2MPU16_IRQ_OCP_B2S,
	S2MPU16_IRQ_OCP_B3S,
	S2MPU16_IRQ_OCP_B4S,
	S2MPU16_IRQ_OCP_B5S,
	S2MPU16_IRQ_OCP_B6S,
	S2MPU16_IRQ_OCP_B7S,
	S2MPU16_IRQ_OCP_B8S,
	S2MPU16_IRQ_OCP_B9S,
	S2MPU16_IRQ_OCP_B10S,
	S2MPU16_IRQ_OCP_SR1S,
	S2MPU16_IRQ_OCP_SR2S,
	/* Temp */
	S2MPU16_IRQ_INT120C,
	S2MPU16_IRQ_INT140C,
};

enum sec_device_type {
	s2mpu16X,
};

struct s2mpu16_dev {
	struct device *dev;
	struct s2mpu16_platform_data *pdata;
	struct i2c_client *i2c;
	struct i2c_client *vgpio;
	struct i2c_client *pmic1;
	struct i2c_client *pmic2;
	struct i2c_client *close1;
	struct i2c_client *close2;
	struct i2c_client *gpio;
	struct mutex i2c_lock;
	struct mutex irqlock;
	struct apm_ops *ops;

	bool wakeup;
	int type;
	int device_type;

	/* pmic VER/REV register */
	uint8_t pmic_rev;

#if IS_ENABLED(CONFIG_DRV_SAMSUNG_PMIC)
	struct device *irq_dev;
#endif
	/* Work queue */
	struct workqueue_struct *irq_wqueue;
	struct delayed_work irq_work;
};

enum s2mpu16_types {
	TYPE_S2MPU16,
};

extern int s2mpu16_notifier_init(struct s2mpu16_dev *s2mpu16);
extern void s2mpu16_notifier_deinit(struct s2mpu16_dev *s2mpu16);

/* s2mpu16 shared i2c API function */
extern int s2mpu16_read_reg(struct i2c_client *i2c, uint8_t reg, uint8_t *dest);
extern int s2mpu16_bulk_read(struct i2c_client *i2c, uint8_t reg, int count, uint8_t *buf);
extern int s2mpu16_write_reg(struct i2c_client *i2c, uint8_t reg, uint8_t value);
extern int s2mpu16_bulk_write(struct i2c_client *i2c, uint8_t reg, int count, uint8_t *buf);
extern int s2mpu16_write_word(struct i2c_client *i2c, uint8_t reg, uint16_t value);
extern int s2mpu16_read_word(struct i2c_client *i2c, uint8_t reg);
extern int s2mpu16_update_reg(struct i2c_client *i2c, uint8_t reg, uint8_t val, uint8_t mask);

#if IS_ENABLED(CONFIG_EXYNOS_AFM)
extern int sub_pmic_read_reg(struct i2c_client *i2c, uint8_t reg, uint8_t *val);
extern int sub_pmic_update_reg(struct i2c_client *i2c, uint8_t reg, uint8_t val, uint8_t mask);
extern int sub_pmic_get_i2c(struct i2c_client **i2c);
#endif

#endif /* __LINUX_MFD_S2MPU16_REGULATOR_H */
